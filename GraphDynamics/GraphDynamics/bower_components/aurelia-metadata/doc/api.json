{"name":"metadata","description":"Utilities for reading and writing the metadata of JavaScript functions.","classes":[{"name":"MetadataStorage","file":"aurelia/metadata/src/metadata.js","line":5,"description":"Stores metadata and provides helpers for searching and adding to it.","methods":[{"line":16,"description":"Searches metadata and returns the first instance of a particular type.","name":"first","params":[{"name":"type","description":"The metadata type to look for.","type":"Function"},{"name":"searchPrototype","description":"Indicates whether or not to search the inheritance hierarchy for metadata.","type":"Boolean"}],"return":{"description":"Returns an instance of the specified metadata type if found; otherwise null.","type":"Object"}},{"line":55,"description":"Searches metadata for all instances of a particular type.","name":"all","params":[{"name":"type","description":"The metadata type to look for.","type":"Function"},{"name":"searchPrototype","description":"Indicates whether or not to search the inheritance hierarchy for metadata.","type":"Boolean"}],"return":{"description":"Returns an array of the specified metadata type.","type":"Array"}},{"line":92,"description":"Adds metadata.","name":"add","params":[{"name":"instance","description":"The metadata instance to add.","type":"Object"}]}],"properties":[],"events":[]},{"name":"Metadata","file":"aurelia/metadata/src/metadata.js","line":133,"description":"Provides access to metadata.","static":1,"methods":[{"line":140,"description":"Locates the metadata on the owner.","name":"on","params":[{"name":"owner","description":"The owner of the metadata.","type":"Function"}],"return":{"description":"Returns the stored metadata.","type":"MetadataStorage"}},{"line":178,"description":"Adds metadata.","name":"add","params":[{"name":"instance","description":"The metadata instance to add.","type":"Object"}]},{"line":189,"description":"Adds an additional location to search for metadata in.","name":"location","params":[{"name":"staticPropertyName","description":"The name of the property on the function instance to search for metadata.","type":"String"}]},{"line":198,"description":"Adds a function capable of locating metadata.","name":"locator","params":[{"name":"locator","description":"Configures a function which searches for metadata. It should return undefined if none is found.","type":"Function"}]}],"properties":[],"events":[]},{"name":"Origin","file":"aurelia/metadata/src/origin.js","line":11,"description":"A metadata annotation that describes the origin module of the function to which it's attached.","is_constructor":1,"params":[{"name":"moduleId","description":"The origin module id.","type":"String"},{"name":"moduleMember","description":"The name of the export in the origin module.","type":"String"}],"methods":[{"line":25,"description":"Get the Origin annotation for the specified function.","name":"get","static":1,"params":[{"name":"fn","description":"The function to inspect for Origin metadata.","type":"Function"}],"return":{"description":"Returns the Origin metadata.","type":"Origin"}},{"line":49,"description":"Set the Origin annotation for the specified function.","name":"set","static":1,"params":[{"name":"fn","description":"The function to set the Origin metadata on.","type":"Function"},{"name":"fn","description":"The Origin metadata to store on the function.","type":"Origin"}],"return":{"description":"Returns the Origin metadata.","type":"Origin"}}],"properties":[],"events":[]},{"name":"ResourceType","file":"aurelia/metadata/src/resource-type.js","line":1,"description":"An abstract base class used to designate resources which can be loaded and registered in a framework.","is_constructor":1,"methods":[{"line":8,"description":"Implemented by resource metadata to allow it to self-configure and load dependencies.","name":"load","params":[{"name":"container","description":"The dependency injection container to use for service resolution.","type":"Container"},{"name":"target","description":"The target that is decorated by this ResourceType metadata.","type":"Object"}],"return":{"description":"Returns a promise for itself, resolving when all dependent resources are loaded.","type":"Promise"}},{"line":20,"description":"Implemented by resources to allow them to register themselved in a resource registry.","name":"register","params":[{"name":"registry","description":"The resource registry that this resource needs to be registered in.","type":"ResourceRegistry"},{"name":"name","description":"A possible name override for the resource.","type":"String","optional":true}]}],"properties":[],"events":[]}],"methods":[],"properties":[],"events":[]}